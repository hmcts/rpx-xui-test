import { OnInit, EventEmitter } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import { Jurisdiction } from '../../domain/definition/jurisdiction.model';
import { CaseTypeLite } from '../../domain/definition/case-type-lite.model';
import { CaseEvent } from '../../domain/definition/case-event.model';
import { CreateCaseFiltersSelection } from './create-case-filters-selection.model';
import { DefinitionsService, OrderService } from '../../services';
export declare class CreateCaseFiltersComponent implements OnInit {
    private orderService;
    private definitionsService;
    isDisabled: boolean;
    startButtonText: string;
    selectionSubmitted: EventEmitter<CreateCaseFiltersSelection>;
    selectionChanged: EventEmitter<any>;
    formGroup: FormGroup;
    selected: {
        jurisdiction?: Jurisdiction;
        caseType?: CaseTypeLite;
        event?: CaseEvent;
        formGroup?: FormGroup;
    };
    jurisdictions: Jurisdiction[];
    selectedJurisdictionCaseTypes?: CaseTypeLite[];
    selectedCaseTypeEvents?: CaseEvent[];
    filterJurisdictionControl: FormControl;
    filterCaseTypeControl: FormControl;
    filterEventControl: FormControl;
    constructor(orderService: OrderService, definitionsService: DefinitionsService);
    ngOnInit(): void;
    onJurisdictionIdChange(): void;
    onCaseTypeIdChange(): void;
    onEventIdChange(): void;
    isCreatable(): boolean;
    apply(): void;
    private sortEvents;
    private retainEventsWithNoPreStates;
    private selectJurisdiction;
    private selectCaseType;
    private selectEvent;
    private findJurisdiction;
    private findCaseType;
    private findEvent;
    initControls(): void;
    private resetCaseType;
    private resetEvent;
    emitChange(): void;
    private isEmpty;
}
